{"ast":null,"code":"var _jsxFileName = \"/Users/peterlevantis/Downloads/react-jokes-classes/src/JokeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n/** List of jokes. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JokeList({\n  numJokesToGet = 5\n}) {\n  _s();\n  const [jokes, setJokes] = useState([]);\n  const [{\n    isLoading,\n    setIsLoading\n  }] = useState([true]);\n  useEffect(() => {\n    async function getJokes() {\n      let joke = [...jokes];\n      let seenJokes = new Set();\n      try {\n        while (joke.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: {\n              Accept: \"application/json\"\n            }\n          });\n          let {\n            ...resObj\n          } = res.data;\n          if (!seenJokes.has(resObj.id)) {\n            seenJokes.add(resObj.id);\n            joke.push({\n              ...resObj,\n              votes: 0\n            });\n          } else {\n            console.log(\"duplicate found!\");\n          }\n        }\n        setJokes(joke);\n        setIsLoading(false);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    if (jokes.length === 0) getJokes();\n  }, [jokes, numJokesToGet]);\n\n  /* empty joke list, set to loading state, and then call getJokes */\n\n  function generateNewJokes() {\n    setJokes([]);\n    setIsLoading(true);\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n  function vote(id, delta) {\n    setJokes(allJokes => allJokes.map(j => j.id === id ? {\n      ...j,\n      votes: j.votes + delta\n    } : j));\n  }\n  ;\n\n  /* render: either loading spinner or list of sorted jokes. */\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-4x fa-spinner fa-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  }\n  let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JokeList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: generateNewJokes,\n      children: \"Get New Jokes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(Joke, {\n      text: j.joke,\n      id: j.id,\n      votes: j.votes,\n      vote: vote\n    }, j.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this);\n}\n_s(JokeList, \"HCkCD1/dcEBnR5Oy9Kpyh5UyUk8=\");\n_c = JokeList;\nexport default JokeList;\nvar _c;\n$RefreshReg$(_c, \"JokeList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Joke","jsxDEV","_jsxDEV","JokeList","numJokesToGet","_s","jokes","setJokes","isLoading","setIsLoading","getJokes","joke","seenJokes","Set","length","res","get","headers","Accept","resObj","data","has","id","add","push","votes","console","log","err","error","generateNewJokes","vote","delta","allJokes","map","j","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sortedJokes","sort","a","b","onClick","text","_c","$RefreshReg$"],"sources":["/Users/peterlevantis/Downloads/react-jokes-classes/src/JokeList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n/** List of jokes. */\n\nfunction JokeList({numJokesToGet = 5}){\n  const [jokes, setJokes] = useState([]);\n  const [{isLoading,setIsLoading}]= useState([true])\n\n  useEffect(()=>{\n    async function getJokes(){\n      let joke = [...jokes]\n      let seenJokes = new Set();\n      try {\n        while (joke.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: { Accept: \"application/json\" }\n          });\n          let { ...resObj } = res.data;\n  \n          if (!seenJokes.has(resObj.id)) {\n            seenJokes.add(resObj.id);\n            joke.push({ ...resObj, votes: 0 });\n          } else {\n            console.log(\"duplicate found!\");\n          }\n        }\n        setJokes(joke)\n        setIsLoading(false)\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    if(jokes.length === 0) getJokes();\n    }, [jokes, numJokesToGet]);\n\n\n  /* empty joke list, set to loading state, and then call getJokes */\n\n  function generateNewJokes() {\n    setJokes([]);\n    setIsLoading(true)\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n  function vote(id,delta){\n    setJokes(allJokes => allJokes.map(j =>\n        j.id === id ? { ...j, votes: j.votes + delta } : j))\n    };\n  \n\n  /* render: either loading spinner or list of sorted jokes. */\n\n  if(isLoading){\n      return (\n        <div className=\"loading\">\n          <i className=\"fas fa-4x fa-spinner fa-spin\" />\n        </div>\n      )\n    }\n\n    let sortedJokes = [...jokes].sort((a,b)=> b.votes - a.votes);\n    \n    return (\n      <div className=\"JokeList\">\n        <button\n          className=\"JokeList-getmore\"\n          onClick={generateNewJokes}\n        >\n          Get New Jokes\n        </button>\n\n        {sortedJokes.map(j => (\n          <Joke\n            text={j.joke}\n            key={j.id}\n            id={j.id}\n            votes={j.votes}\n            vote={vote}\n          />\n        ))}\n      </div>\n    );\n  }\n  \n\nexport default JokeList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}